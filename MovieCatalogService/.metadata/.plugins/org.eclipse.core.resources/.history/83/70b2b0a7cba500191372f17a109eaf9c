package com.example.moviecatalogservice.controller;


import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.util.Arrays;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.example.moviecatalogservice.model.CatalogItem;
import com.example.moviecatalogservice.model.Movie;
import com.example.moviecatalogservice.model.Rating;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogController {
	
	@Autowired
	RestTemplate restTemplate;
	
	@Autowired
	WebClient.Builder builder;
	
	@GetMapping("/{userId}")
	public List<CatalogItem> getCatalog(@PathVariable String userId){
		List<Rating> ratings = restTemplate.getForObject("http://localhost:8083/ratings/users/"+userId, RatingList.class);
		return ratings.stream().map(rating -> {
			Movie movie = restTemplate.getForObject("http://localhost:8081/movies/"+rating.getMovieId(), Movie.class);
			/*Movie movie = builder.build()
			.get()
			.uri("http://localhost:8081/movies/"+rating.getMovieId())
			.retrieve()
			.bodyToMono(Movie.class)//Mono means get the response in the future(asynchronously) and not immediately(synchronously)
			.block();*/
			return new CatalogItem(movie.getMovieName(),"Description",rating.getRating());
		}).collect(Collectors.toList());
	}
}
